{"version":3,"file":"invoke.js","sources":["../../src/helpers/invoke.ts"],"sourcesContent":["import { isArray as isEmberArray } from '@ember/array';\nimport { helper } from '@ember/component/helper';\nimport RSVP from 'rsvp';\nimport type { AnyVoidFn } from '../utils/types';\n\nconst { all } = RSVP;\n\n/**\n * @deprecated since ember 3.25 (with polyfill) and ember 4.5, this utility is not needed as functions can be directly invoked\n *\n * Invokes a method on an object, or on each object of an array\n */\nexport function invoke<K extends PropertyKey, T extends Record<K, AnyVoidFn>>([\n  methodName,\n  ...args\n]: [K, T, ...unknown[]]) {\n  const obj = args.pop() as T | T[];\n\n  if (isEmberArray(obj)) {\n    return function () {\n      const promises = obj.map((item) => item[methodName]?.(...args));\n\n      return all(promises);\n    };\n  }\n\n  return function () {\n    return obj[methodName]?.(...args);\n  };\n}\n\nexport default helper(invoke);\n"],"names":["all","RSVP","invoke","methodName","args","obj","pop","isEmberArray","promises","map","item","helper"],"mappings":";;;;AAKA,MAAM;AAAEA,EAAAA;AAAI,CAAC,GAAGC,IAAI;;AAEpB;AACA;AACA;AACA;AACA;AACO,SAASC,MAAMA,CAAwD,CAC5EC,UAAU,EACV,GAAGC,IAAI,CACc,EAAE;AACvB,EAAA,MAAMC,GAAG,GAAGD,IAAI,CAACE,GAAG,EAAa;AAEjC,EAAA,IAAIC,OAAY,CAACF,GAAG,CAAC,EAAE;AACrB,IAAA,OAAO,YAAY;AACjB,MAAA,MAAMG,QAAQ,GAAGH,GAAG,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACP,UAAU,CAAC,GAAG,GAAGC,IAAI,CAAC,CAAC;MAE/D,OAAOJ,GAAG,CAACQ,QAAQ,CAAC;KACrB;AACH;AAEA,EAAA,OAAO,YAAY;AACjB,IAAA,OAAOH,GAAG,CAACF,UAAU,CAAC,GAAG,GAAGC,IAAI,CAAC;GAClC;AACH;AAEA,eAAeO,MAAM,CAACT,MAAM,CAAC;;;;"}