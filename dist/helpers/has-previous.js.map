{"version":3,"file":"has-previous.js","sources":["../../src/helpers/has-previous.ts"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport { isPresent } from '@ember/utils';\nimport { previous } from './previous.ts';\nimport isEqual from '../utils/is-equal.ts';\nimport getValueArrayAndUseDeepEqualFromParams from '../-private/get-value-array-and-use-deep-equal-from-params.ts';\nimport asArray from '../utils/as-array.ts';\n\nexport function hasPrevious<T>(\n  currentValue: T,\n  maybeArray: T[],\n  useDeepEqual = false,\n) {\n  const array = asArray(maybeArray);\n  const previousValue = previous(currentValue, array, useDeepEqual);\n  const isNotSameValue = !isEqual(previousValue, currentValue, useDeepEqual);\n\n  return isNotSameValue && isPresent(previousValue);\n}\n\nexport default helper(function <T>(params: [T, boolean | T[], T[]?]) {\n  const { currentValue, array, useDeepEqual } =\n    getValueArrayAndUseDeepEqualFromParams(params);\n\n  return hasPrevious(currentValue, array as T[], useDeepEqual);\n});\n"],"names":["hasPrevious","currentValue","maybeArray","useDeepEqual","array","asArray","previousValue","previous","isNotSameValue","isEqual","isPresent","helper","params","getValueArrayAndUseDeepEqualFromParams"],"mappings":";;;;;;;AAOO,SAASA,WAAWA,CACzBC,YAAe,EACfC,UAAe,EACfC,YAAY,GAAG,KAAK,EACpB;AACA,EAAA,MAAMC,KAAK,GAAGC,OAAO,CAACH,UAAU,CAAC;EACjC,MAAMI,aAAa,GAAGC,QAAQ,CAACN,YAAY,EAAEG,KAAK,EAAED,YAAY,CAAC;EACjE,MAAMK,cAAc,GAAG,CAACC,OAAO,CAACH,aAAa,EAAEL,YAAY,EAAEE,YAAY,CAAC;AAE1E,EAAA,OAAOK,cAAc,IAAIE,SAAS,CAACJ,aAAa,CAAC;AACnD;AAEA,oBAAeK,MAAM,CAAC,UAAaC,MAAgC,EAAE;EACnE,MAAM;IAAEX,YAAY;IAAEG,KAAK;AAAED,IAAAA;AAAa,GAAC,GACzCU,sCAAsC,CAACD,MAAM,CAAC;AAEhD,EAAA,OAAOZ,WAAW,CAACC,YAAY,EAAEG,KAAK,EAASD,YAAY,CAAC;AAC9D,CAAC,CAAC;;;;"}