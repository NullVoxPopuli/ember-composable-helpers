{"version":3,"file":"reject-by.js","sources":["../../src/helpers/reject-by.ts"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport { isArray as isEmberArray } from '@ember/array';\nimport { isPresent } from '@ember/utils';\nimport { get } from '@ember/object';\nimport isEqual from '../utils/is-equal.ts';\nimport asArray from '../utils/as-array.ts';\n\nexport function rejectBy<T extends object, K extends keyof T>([\n  byPath,\n  value,\n  array,\n]: [K, T | ((value: T[K]) => boolean) | undefined, T[]] | [K, T[]]) {\n  if (!isEmberArray(array) && isEmberArray(value)) {\n    array = value as T[];\n    value = undefined;\n  }\n  array = asArray(array as T[]);\n\n  let filterFn;\n\n  if (isPresent(value)) {\n    if (typeof value === 'function') {\n      filterFn = (item: T) => !value(get(item, byPath));\n    } else {\n      filterFn = (item: T) => !isEqual(get(item, byPath), value);\n    }\n  } else {\n    filterFn = (item: T) => !get(item, byPath);\n  }\n\n  return array.filter(filterFn);\n}\n\nexport default helper(rejectBy);\n"],"names":["rejectBy","byPath","value","array","isEmberArray","undefined","asArray","filterFn","isPresent","item","get","isEqual","filter","helper"],"mappings":";;;;;;;AAOO,SAASA,QAAQA,CAAsC,CAC5DC,MAAM,EACNC,KAAK,EACLC,KAAK,CAC2D,EAAE;EAClE,IAAI,CAACC,OAAY,CAACD,KAAK,CAAC,IAAIC,OAAY,CAACF,KAAK,CAAC,EAAE;AAC/CC,IAAAA,KAAK,GAAGD,KAAY;AACpBA,IAAAA,KAAK,GAAGG,SAAS;AACnB;AACAF,EAAAA,KAAK,GAAGG,OAAO,CAACH,KAAY,CAAC;AAE7B,EAAA,IAAII,QAAQ;AAEZ,EAAA,IAAIC,SAAS,CAACN,KAAK,CAAC,EAAE;AACpB,IAAA,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;AAC/BK,MAAAA,QAAQ,GAAIE,IAAO,IAAK,CAACP,KAAK,CAACQ,GAAG,CAACD,IAAI,EAAER,MAAM,CAAC,CAAC;AACnD,KAAC,MAAM;AACLM,MAAAA,QAAQ,GAAIE,IAAO,IAAK,CAACE,OAAO,CAACD,GAAG,CAACD,IAAI,EAAER,MAAM,CAAC,EAAEC,KAAK,CAAC;AAC5D;AACF,GAAC,MAAM;IACLK,QAAQ,GAAIE,IAAO,IAAK,CAACC,GAAG,CAACD,IAAI,EAAER,MAAM,CAAC;AAC5C;AAEA,EAAA,OAAOE,KAAK,CAACS,MAAM,CAACL,QAAQ,CAAC;AAC/B;AAEA,iBAAeM,MAAM,CAACb,QAAQ,CAAC;;;;"}