{"version":3,"file":"intersect.js","sources":["../../src/helpers/intersect.ts"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport { isArray as isEmberArray } from '@ember/array';\nimport asArray from '../utils/as-array.ts';\n\nexport function intersect<T>([...arrays]: [...T[]]) {\n  const confirmedArrays = asArray(arrays).map((array) => {\n    return isEmberArray(array) ? (array as T[]) : [];\n  });\n  // copied from https://github.com/emberjs/ember.js/blob/315ec6472ff542ac714432036cc96fe4bd62bd1f/packages/%40ember/object/lib/computed/reduce_computed_macros.js#L1063-L1100\n  const results = confirmedArrays.pop()!.filter((candidate) => {\n    for (let i = 0; i < confirmedArrays.length; i++) {\n      let found = false;\n      const array = confirmedArrays[i] as T[];\n      for (let j = 0; j < array.length; j++) {\n        if (array[j] === candidate) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === false) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  return results;\n}\n\nexport default helper(intersect);\n"],"names":["intersect","arrays","confirmedArrays","asArray","map","array","isEmberArray","results","pop","filter","candidate","i","length","found","j","helper"],"mappings":";;;;AAIO,SAASA,SAASA,CAAI,CAAC,GAAGC,MAAM,CAAW,EAAE;EAClD,MAAMC,eAAe,GAAGC,OAAO,CAACF,MAAM,CAAC,CAACG,GAAG,CAAEC,KAAK,IAAK;AACrD,IAAA,OAAOC,OAAY,CAACD,KAAK,CAAC,GAAIA,KAAK,GAAW,EAAE;AAClD,GAAC,CAAC;AACF;EACA,MAAME,OAAO,GAAGL,eAAe,CAACM,GAAG,EAAE,CAAEC,MAAM,CAAEC,SAAS,IAAK;AAC3D,IAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,eAAe,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;MAC/C,IAAIE,KAAK,GAAG,KAAK;AACjB,MAAA,MAAMR,KAAK,GAAGH,eAAe,CAACS,CAAC,CAAQ;AACvC,MAAA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACO,MAAM,EAAEE,CAAC,EAAE,EAAE;AACrC,QAAA,IAAIT,KAAK,CAACS,CAAC,CAAC,KAAKJ,SAAS,EAAE;AAC1BG,UAAAA,KAAK,GAAG,IAAI;AACZ,UAAA;AACF;AACF;MAEA,IAAIA,KAAK,KAAK,KAAK,EAAE;AACnB,QAAA,OAAO,KAAK;AACd;AACF;AAEA,IAAA,OAAO,IAAI;AACb,GAAC,CAAC;AAEF,EAAA,OAAON,OAAO;AAChB;AAEA,kBAAeQ,MAAM,CAACf,SAAS,CAAC;;;;"}