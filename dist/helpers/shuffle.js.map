{"version":3,"file":"shuffle.js","sources":["../../src/helpers/shuffle.ts"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport { isArray as isEmberArray } from '@ember/array';\nimport { typeOf } from '@ember/utils';\n\nexport function shuffle<T>(array: T[], randomizer?: () => number) {\n  array = array.slice(0);\n  let count = array.length;\n  let rand, temp;\n  randomizer = (typeOf(randomizer) === 'function' && randomizer) || Math.random;\n\n  while (count > 1) {\n    rand = Math.floor(randomizer() * count--);\n\n    temp = array[count];\n    array[count] = array[rand]!;\n    array[rand] = temp!;\n  }\n  return array;\n}\n\nexport default helper(function <T>([randomizer, array]: [\n  (() => number) | T[] | undefined,\n  T[]?,\n]) {\n  if (array === undefined) {\n    array = randomizer as T[];\n    randomizer = undefined;\n  }\n\n  if (!isEmberArray(array)) {\n    return [array];\n  }\n\n  return shuffle(array, randomizer as () => number);\n});\n"],"names":["shuffle","array","randomizer","slice","count","length","rand","temp","typeOf","Math","random","floor","helper","undefined","isEmberArray"],"mappings":";;;;AAIO,SAASA,OAAOA,CAAIC,KAAU,EAAEC,UAAyB,EAAE;AAChED,EAAAA,KAAK,GAAGA,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;AACtB,EAAA,IAAIC,KAAK,GAAGH,KAAK,CAACI,MAAM;EACxB,IAAIC,IAAI,EAAEC,IAAI;AACdL,EAAAA,UAAU,GAAIM,MAAM,CAACN,UAAU,CAAC,KAAK,UAAU,IAAIA,UAAU,IAAKO,IAAI,CAACC,MAAM;EAE7E,OAAON,KAAK,GAAG,CAAC,EAAE;IAChBE,IAAI,GAAGG,IAAI,CAACE,KAAK,CAACT,UAAU,EAAE,GAAGE,KAAK,EAAE,CAAC;AAEzCG,IAAAA,IAAI,GAAGN,KAAK,CAACG,KAAK,CAAC;AACnBH,IAAAA,KAAK,CAACG,KAAK,CAAC,GAAGH,KAAK,CAACK,IAAI,CAAE;AAC3BL,IAAAA,KAAK,CAACK,IAAI,CAAC,GAAGC,IAAK;AACrB;AACA,EAAA,OAAON,KAAK;AACd;AAEA,gBAAeW,MAAM,CAAC,UAAa,CAACV,UAAU,EAAED,KAAK,CAGpD,EAAE;EACD,IAAIA,KAAK,KAAKY,SAAS,EAAE;AACvBZ,IAAAA,KAAK,GAAGC,UAAiB;AACzBA,IAAAA,UAAU,GAAGW,SAAS;AACxB;AAEA,EAAA,IAAI,CAACC,OAAY,CAACb,KAAK,CAAC,EAAE;IACxB,OAAO,CAACA,KAAK,CAAC;AAChB;AAEA,EAAA,OAAOD,OAAO,CAACC,KAAK,EAAEC,UAA0B,CAAC;AACnD,CAAC,CAAC;;;;"}