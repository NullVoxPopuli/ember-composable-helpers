{"version":3,"file":"next.js","sources":["../../src/helpers/next.ts"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport getIndex from '../utils/get-index.ts';\nimport { isEmpty } from '@ember/utils';\nimport getValueArrayAndUseDeepEqualFromParams from '../-private/get-value-array-and-use-deep-equal-from-params.ts';\nimport asArray from '../utils/as-array.ts';\n\nexport function next<T>(\n  currentValue: T,\n  maybeArray: T[],\n  useDeepEqual = false,\n) {\n  const array = asArray(maybeArray);\n  const currentIndex = getIndex(array, currentValue, useDeepEqual);\n  const lastIndex = array.length - 1;\n\n  if (null === currentIndex || isEmpty(currentIndex)) {\n    return;\n  }\n\n  return currentIndex === lastIndex ? currentValue : array.at(currentIndex + 1);\n}\n\nexport default helper(function <T>(params: [T, boolean | T[], T[]?]) {\n  const { currentValue, array, useDeepEqual } =\n    getValueArrayAndUseDeepEqualFromParams(params);\n\n  return next(currentValue, array as T[], useDeepEqual);\n});\n"],"names":["next","currentValue","maybeArray","useDeepEqual","array","asArray","currentIndex","getIndex","lastIndex","length","isEmpty","at","helper","params","getValueArrayAndUseDeepEqualFromParams"],"mappings":";;;;;;AAMO,SAASA,IAAIA,CAClBC,YAAe,EACfC,UAAe,EACfC,YAAY,GAAG,KAAK,EACpB;AACA,EAAA,MAAMC,KAAK,GAAGC,OAAO,CAACH,UAAU,CAAC;EACjC,MAAMI,YAAY,GAAGC,QAAQ,CAACH,KAAK,EAAEH,YAAY,EAAEE,YAAY,CAAC;AAChE,EAAA,MAAMK,SAAS,GAAGJ,KAAK,CAACK,MAAM,GAAG,CAAC;EAElC,IAAI,IAAI,KAAKH,YAAY,IAAII,OAAO,CAACJ,YAAY,CAAC,EAAE;AAClD,IAAA;AACF;AAEA,EAAA,OAAOA,YAAY,KAAKE,SAAS,GAAGP,YAAY,GAAGG,KAAK,CAACO,EAAE,CAACL,YAAY,GAAG,CAAC,CAAC;AAC/E;AAEA,aAAeM,MAAM,CAAC,UAAaC,MAAgC,EAAE;EACnE,MAAM;IAAEZ,YAAY;IAAEG,KAAK;AAAED,IAAAA;AAAa,GAAC,GACzCW,sCAAsC,CAACD,MAAM,CAAC;AAEhD,EAAA,OAAOb,IAAI,CAACC,YAAY,EAAEG,KAAK,EAASD,YAAY,CAAC;AACvD,CAAC,CAAC;;;;"}